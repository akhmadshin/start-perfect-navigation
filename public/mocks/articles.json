{
  "data": [
    {
      "id": 4,
      "attributes": {
        "title": "Optimistic Navigation in Web Development",
        "description": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "text": "When people hear the term \"optimistic navigation\" in the context of the web, they often associate it with skeletons and loader spinners. However, the concept goes deeper than that. Optimistic navigation involves displaying optimistic (placeholder) data while the real data takes its time to load."
              }
            ]
          }
        ],
        "slug": "optimistic-navigation-in-web-development",
        "thumbnail": {
          "data": {
            "id": 11,
            "attributes": {
              "thumbhash": "LrcFDILE7xaTZ3aZZ3ZvgPMFSA==",
              "url": "/uploads/sara_kurfess_E_Lu_A9isp_Q_Ho_unsplash_c0f776c8ce.jpg",
              "alternativeText": null,
              "height": 1080,
              "width": 1920
            }
          }
        }
      }
    },
    {
      "id": 3,
      "attributes": {
        "title": "Running Next.js navigation through react-query",
        "description": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "text": "In next.js pages router, every client navigation to routes with getServerSideProps/getStaticProps triggers a fetch request. What if we could run those client-side fetch requests through a client-side fetch library like "
              },
              {
                "type": "text",
                "text": "react-query",
                "code": true
              },
              {
                "type": "text",
                "text": "? I've created a "
              },
              {
                "type": "text",
                "text": "next-query-glue",
                "code": true
              },
              {
                "type": "text",
                "text": " library that allows you to do it. It brings a lot of control over data requests and greatly improves the user experience."
              }
            ]
          }
        ],
        "slug": "next-through-react-query",
        "thumbnail": {
          "data": {
            "id": 9,
            "attributes": {
              "thumbhash": "ZQgGBIDQfXV2iHedVXm9UCRPpg==",
              "url": "/uploads/mick_haupt_t_Jefy_Vu7_Po_unsplash_85d5975b3b.jpg",
              "alternativeText": null,
              "height": 1080,
              "width": 1920
            }
          }
        }
      }
    },
    {
      "id": 1,
      "attributes": {
        "title": "Three ways to achieve instant navigation",
        "description": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "text": "Links in next.js feels laggy if the user has slow internet / server response with delays / serverless function hits a cold start. It ruins UX. And most likely, users will click fewer links because of those delays. If every link always opened instantly, users would be more active on the website. Fast navigation improves UX, user engagement, and positively impacts SEO. Let's look at three ways to achieve instant navigation."
              }
            ]
          }
        ],
        "slug": "3-ways-to-achieve-instant-navigation",
        "thumbnail": {
          "data": {
            "id": 10,
            "attributes": {
              "thumbhash": "qggGFIJvk3eVZ3lploiwXQrtpA==",
              "url": "/uploads/debby_hudson_S_To4zi_Y5g7_A_unsplash_0cccb7cfbb.jpg",
              "alternativeText": null,
              "height": 1080,
              "width": 1920
            }
          }
        }
      }
    }
  ],
  "meta": {
    "pagination": {
      "start": 0,
      "limit": 10,
      "total": 3
    }
  }
}